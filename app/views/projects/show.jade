:javascript
  | var socket = new io.Socket();
  | socket.connect();
  | socket.on('message', function(msg) {
  |   var data = JSON.parse(msg);
  |   if(data.stdout)
  |     $('#current-build #stdout').append(data.stdout.replace("\\n",'<br />'));
  |   if(data.stderr)
  |     $('#current-build #stderr').append(data.stderr.replace("\\n",'<br />'));
  | });
#project-detail.section

  .section-header
    h2 Project:
      = project.name()
    .actions
      ul
        li
          a(href: build_project_path(project), title: 'Rebuild project') Rebuild
        li
          a(href: edit_project_path(project), title: 'Edit project') Edit
        li
          a(href: delete_project_path(project), title: 'Delete project') Delete
        li
          a(href: projects_path(), title: 'Projects') Back

  .section-details
    h3 Builds:
    #current-build
      h4 Current Build
      #stdout
        h5 STDOUT
      #stderr
        h5 STDERR
    - if (project.builds())
      - each build in project.builds().sort(function(a, b) { return b.created_at - a.created_at })
        .build(class: build.success == true ? 'success' : 'failure')
          h4= build.created_at
          .build-output
            p STDOUT
            .stdout
              pre= build.stdout
            p STDERR
            .stderr
              pre= build.stderr
  .section-footer
    .actions
      ul
        li
          a(href: build_project_path(project), title: 'Rebuild project') Rebuild
        li
          a(href: edit_project_path(project), title: 'Edit project') Edit
        li
          a(href: delete_project_path(project), title: 'Delete project') Delete
        li
          a(href: projects_path(), title: 'Projects') Back
